

stages:
  - build
  - test
  - deploy
  - singularity

variables:
  MAVEN_CLI_OPTS: "-s .m2/settings.xml --batch-mode"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  paths:
    - .m2/repository/

build:
  image: maven:3.6-adoptopenjdk-14
  stage: build
  script:
    - mvn compile

test:
  image: maven:3.6-adoptopenjdk-14
  stage: test
  script:
    - mvn clean test
    - cat coverage/target/site/jacoco-aggregate/index.html | grep -o '<tfoot>.*</tfoot>'

deploySnapshot:
  image: maven:3.6-adoptopenjdk-14
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS deploy -Dmaven.test.skip=true
  only:
    - develop

deployCentral:
  image: maven:3.6-adoptopenjdk-14
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -qy && apt-get install openssh-client -qqy )'
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - 'which gpg || ( apt-get update -qy && apt-get install gnupg -qqy )'
    - export GPG_TTY=$(tty)
    - gpg -v --batch --import <(echo "${GPG_PRIVATE_KEY}")
  script:
    - git config --global user.email "$env:GITLAB_USER_EMAIL"
    - git config --global user.name "$env:GITLAB_USER_NAME"
    - git checkout -B "$CI_BUILD_REF_NAME"
    - mvn $MAVEN_CLI_OPTS release:prepare -DautoVersionSubmodules=true -Dmaven.test.skip=true -DscmCommentPrefix="[skip ci]" -DupdateWorkingCopyVersions=false -DpushChanges=false
    - mvn $MAVEN_CLI_OPTS release:perform -Darguments=-Dgpg.passphrase=${GPG_PASSPHRASE} -DlocalCheckout=true
  only:
    - master

buildSingularity:
  stage: singularity
  image:
    name: quay.io/singularity/singularity:v3.4.0
    entrypoint: [ "" ]
  script:
    - singularity build met4j-toolbox.sif met4j.singularity
    - singularity push --docker-username "${CI_REGISTRY_USER}" --docker-password "${CI_REGISTRY_PASSWORD}" met4j-toolbox.sif oras://"$CI_REGISTRY_IMAGE"/met4j-singularity:"$CI_COMMIT_TAG"
  when: manual

